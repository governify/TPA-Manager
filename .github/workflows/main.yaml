name: Run tests and Build and Push Docker Image

on:
  push:
    branches:
      - develop
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: npm install

      - name: Start the Server
        run: npm run dev &
      
      - name: Run Cypress tests
        run: npx cypress run

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure() 
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: failure() 
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            governify/tpa-manager

      - name: Build and push Docker image for develop branch
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: governify/tpa-manager:develop

      - name: Build and push Docker image for release
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: governify/tpa-manager:${{ github.ref_name }}
